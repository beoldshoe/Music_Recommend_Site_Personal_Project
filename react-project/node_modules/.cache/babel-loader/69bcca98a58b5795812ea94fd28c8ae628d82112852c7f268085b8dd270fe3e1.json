{"ast":null,"code":"var _jsxFileName = \"/Users/beoldshoe/Desktop/\\u1100\\u1175\\u11B7\\u1112\\u1167\\u11AB\\u1109\\u116E/\\u1112\\u1161\\u11A8\\u110B\\u1165\\u11B8/Music_Recommend_Site_Personal_Project/react-project/src/components/GuestBookModal.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModalContainer = styled.div`\n  // Modal을 구현하는데 전체적으로 필요한 CSS를 구현\n  display : flex;\n  justify-content : center;\n  align-items : center;\n  height : 100%;\n`;\n_c = ModalContainer;\nexport const ModalBackdrop = styled.div`\n  // Modal이 떴을 때의 배경을 깔아주는 CSS를 구현\n  z-index: 1; //위치지정 요소\n  position: fixed;\n  display : flex;\n  justify-content : center;\n  align-items : center;\n  background-color: rgba(0,0,0,0.4);\n  border-radius: 10px;\n  top : 0;\n  left : 0;\n  right : 0;\n  bottom : 0;\n`;\n_c2 = ModalBackdrop;\nexport const ModalBtn = styled.button`\n  background-color: var(--coz-purple-600);\n  text-decoration: none;\n  border: none;\n  padding: 20px;\n  color: black;\n  border-radius: 30px;\n  cursor: grab;\n`;\nexport const ExitBtn = styled(ModalBtn)`\n    background-color : #4000c7;\n    border-radius: 10px;\n    text-decoration: none;\n    margin: 10px;\n    padding: 5px 10px;\n    width: 40px;\n    height: 40px;\n    display : flex;\n    justify-content : center;\n    align-items : center;\n`;\nexport const ModalView = styled.div.attrs(props => ({\n  // attrs 메소드를 이용해서 아래와 같이 div 엘리먼트에 속성을 추가할 수 있다.\n  role: 'dialog'\n}))`\n    // Modal창 CSS를 구현합니다.\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    border-radius: 20px;\n    width: 500px;\n    heigth: 200px;\n    background-color: #ffffff;\n    font-family: 'bookkB';\n    color: black; // 원하는 색상 코드로 변경하세요.\n      >div.desc {\n        margin: 50px;\n        font-size: 20px;\n        color: var(--coz-purple-600);\n      }\n  `;\n_c3 = ModalView;\nexport const GuestBookModal = ({\n  isOpen,\n  setIsOpen\n}) => {\n  _s();\n  // 모달 상태를 내부에서 관리하는 대신 props로 받음\n  useEffect(() => {\n    setIsOpen(isOpen); // 외부 상태에 따라 모달 상태 설정\n  }, [isOpen, setIsOpen]);\n  const handleCloseModal = () => {\n    setIsOpen(false); // 모달을 닫는 함수입니다.\n  };\n  const [inputValue, setInputValue] = useState(\"\");\n  const [guestBook, setGuestBook] = useState([]);\n  const updateGuestBook = () => {\n    axios.post(`http://localhost:3001/GuestBook`, {\n      detail: inputValue // inputValue를 detail에 넣어서 보냄\n    }).then(response => {\n      console.log(response.data); // 서버에서 받은 응답을 출력\n      setInputValue(''); // 입력 필드를 초기화\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n  useEffect(() => {\n    axios.get(`http://localhost:3001/GuestBook`).then(response => {\n      setGuestBook(response.data); // 방명록 내용을 상태에 저장\n    }).catch(error => console.error(`Error: ${error}`));\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(ModalContainer, {\n      children: /*#__PURE__*/_jsxDEV(ModalBackdrop, {\n        onClick: handleCloseModal,\n        children: /*#__PURE__*/_jsxDEV(ModalView, {\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uBC29\\uBA85\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              style: {\n                width: '300px',\n                height: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: '10px'\n              },\n              onClick: updateGuestBook,\n              children: \"\\uB4F1\\uB85D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), guestBook.map((entry, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: entry.detail\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(GuestBookModal, \"U6snKILddNbQdAJvRu/lNZbk2ZU=\");\n_c4 = GuestBookModal;\nexport default GuestBookModal;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ModalContainer\");\n$RefreshReg$(_c2, \"ModalBackdrop\");\n$RefreshReg$(_c3, \"ModalView\");\n$RefreshReg$(_c4, \"GuestBookModal\");","map":{"version":3,"names":["useEffect","styled","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalContainer","div","_c","ModalBackdrop","_c2","ModalBtn","button","ExitBtn","ModalView","attrs","props","role","_c3","GuestBookModal","isOpen","setIsOpen","_s","handleCloseModal","inputValue","setInputValue","guestBook","setGuestBook","updateGuestBook","post","detail","then","response","console","log","data","catch","error","get","children","onClick","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","style","display","type","value","onChange","target","width","height","marginLeft","map","entry","index","_c4","$RefreshReg$"],"sources":["/Users/beoldshoe/Desktop/김현수/학업/Music_Recommend_Site_Personal_Project/react-project/src/components/GuestBookModal.js"],"sourcesContent":["import {useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nexport const ModalContainer = styled.div`\n  // Modal을 구현하는데 전체적으로 필요한 CSS를 구현\n  display : flex;\n  justify-content : center;\n  align-items : center;\n  height : 100%;\n`;\n\nexport const ModalBackdrop = styled.div`\n  // Modal이 떴을 때의 배경을 깔아주는 CSS를 구현\n  z-index: 1; //위치지정 요소\n  position: fixed;\n  display : flex;\n  justify-content : center;\n  align-items : center;\n  background-color: rgba(0,0,0,0.4);\n  border-radius: 10px;\n  top : 0;\n  left : 0;\n  right : 0;\n  bottom : 0;\n`;\n\nexport const ModalBtn = styled.button`\n  background-color: var(--coz-purple-600);\n  text-decoration: none;\n  border: none;\n  padding: 20px;\n  color: black;\n  border-radius: 30px;\n  cursor: grab;\n`;\n\nexport const ExitBtn = styled(ModalBtn) `\n    background-color : #4000c7;\n    border-radius: 10px;\n    text-decoration: none;\n    margin: 10px;\n    padding: 5px 10px;\n    width: 40px;\n    height: 40px;\n    display : flex;\n    justify-content : center;\n    align-items : center;\n`;\n\nexport const ModalView = styled.div.attrs((props) => ({\n    // attrs 메소드를 이용해서 아래와 같이 div 엘리먼트에 속성을 추가할 수 있다.\n    role: 'dialog',\n    }))`\n    // Modal창 CSS를 구현합니다.\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    border-radius: 20px;\n    width: 500px;\n    heigth: 200px;\n    background-color: #ffffff;\n    font-family: 'bookkB';\n    color: black; // 원하는 색상 코드로 변경하세요.\n      >div.desc {\n        margin: 50px;\n        font-size: 20px;\n        color: var(--coz-purple-600);\n      }\n  `;\n\nexport const GuestBookModal = ({ \n    isOpen, setIsOpen\n}) => {\n\n    // 모달 상태를 내부에서 관리하는 대신 props로 받음\n  useEffect(() => {\n      setIsOpen(isOpen); // 외부 상태에 따라 모달 상태 설정\n  }, [isOpen, setIsOpen]);\n\n  const handleCloseModal = () => {\n    setIsOpen(false); // 모달을 닫는 함수입니다.\n  }\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [guestBook, setGuestBook] = useState([]);\n\n  const updateGuestBook = () => {\n    axios.post(`http://localhost:3001/GuestBook`, {\n      detail: inputValue  // inputValue를 detail에 넣어서 보냄\n    })\n    .then(response => {\n      console.log(response.data); // 서버에서 받은 응답을 출력\n      setInputValue(''); // 입력 필드를 초기화\n    })\n    .catch(error => console.error(`Error: ${error}`));\n  } \n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/GuestBook`)\n      .then(response => {\n        setGuestBook(response.data); // 방명록 내용을 상태에 저장\n      })\n      .catch(error => console.error(`Error: ${error}`));\n  }, [isOpen]);\n\n        return (\n            <>\n            {isOpen && \n                <ModalContainer>\n                <ModalBackdrop onClick={handleCloseModal}>\n                    <ModalView onClick={(e) => e.stopPropagation()}>\n                    <p>방명록</p>\n                    <div\n                        style={{display:'flex'}}>\n                    <input\n                        type=\"text\"\n                        value={inputValue}\n                        onChange={(e) => setInputValue(e.target.value)}\n                        style={{ width: '300px', height: '20px' }}\n                    />\n                    <button\n                        style={{\n                            marginLeft:'10px'\n                        }}\n                        onClick={updateGuestBook}>등록</button>\n                    </div>\n                    {/* 방명록 내용을 띄움 */}\n                    {guestBook.map((entry, index) =>\n                    <p key={index}>{entry.detail}</p>\n                    )}\n                    </ModalView>\n                </ModalBackdrop>\n                </ModalContainer>\n            }\n            </>\n        );\n};\n\nexport default GuestBookModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}