{"ast":null,"code":"var _jsxFileName = \"/Users/beoldshoe/Desktop/\\u1100\\u1175\\u11B7\\u1112\\u1167\\u11AB\\u1109\\u116E/\\u1112\\u1161\\u11A8\\u110B\\u1165\\u11B8/React/react-project/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [quote, setQuote] = useState(\"\"); // 명언을 저장할 상태\n\n  useEffect(() => {\n    // WiseSayings.txt 파일을 불러옵니다.\n    fetch(`src/WiseSayings.txt`).then(response => response.text()).then(data => {\n      // 데이터를 줄바꿈으로 나눕니다.\n      const lines = data.split('\\n');\n      // 랜덤한 줄을 선택합니다.\n      const randomIndex = Math.floor(Math.random() * lines.length);\n      const randomLine = lines[randomIndex];\n      // 선택한 명언을 상태에 저장합니다.\n      setQuote(randomLine);\n    });\n  }, []); // 빈 의존성 배열을 사용하여 컴포넌트가 마운트될 때 한 번만 실행됩니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/images/HomePage2.jpg)`,\n      backgroundSize: 'cover',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#ffffff',\n        fontFamily: 'bookkB',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: \"\\uC74C\\uC545\\uC744 \\uC0AC\\uB791\\uD558\\uC2DC\\uB098\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'white',\n        fontFamily: 'bookkB',\n        fontSize: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '20px',\n          marginTop: '80px'\n        },\n        children: [quote, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"5dMXsGVSJyMiqBXtvqhGbwvmLe8=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","quote","setQuote","fetch","then","response","text","data","lines","split","randomIndex","Math","floor","random","length","randomLine","style","backgroundImage","process","env","PUBLIC_URL","backgroundSize","height","children","color","fontFamily","display","justifyContent","alignItems","fontSize","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","_c","$RefreshReg$"],"sources":["/Users/beoldshoe/Desktop/김현수/학업/React/react-project/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst HomePage = () => {\n  const [quote, setQuote] = useState(\"\");  // 명언을 저장할 상태\n\n  useEffect(() => {\n    // WiseSayings.txt 파일을 불러옵니다.\n    fetch(`src/WiseSayings.txt`)\n      .then(response => response.text())\n      .then(data => {\n        // 데이터를 줄바꿈으로 나눕니다.\n        const lines = data.split('\\n');\n        // 랜덤한 줄을 선택합니다.\n        const randomIndex = Math.floor(Math.random() * lines.length);\n        const randomLine = lines[randomIndex];\n        // 선택한 명언을 상태에 저장합니다.\n        setQuote(randomLine);\n      });\n  }, []);  // 빈 의존성 배열을 사용하여 컴포넌트가 마운트될 때 한 번만 실행됩니다.\n\n  return (\n    <div style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/images/HomePage2.jpg)`, backgroundSize: 'cover', height: '100vh' }}>\n      <div style={{color: '#ffffff', fontFamily: 'bookkB', display: 'flex', justifyContent: 'center', alignItems: 'center', fontSize:'30px'}}>\n        <div style={{marginTop:'20px'}}>음악을 사랑하시나요?</div>\n      </div>\n      <div style={{color:'white', fontFamily:'bookkB', fontSize:'20px'}}>\n        <div style={{marginLeft:'20px',marginTop:'80px'}}>\n          {quote}  {/* 상태에 저장된 명언을 띄웁니다. */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEzCC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAE,qBAAoB,CAAC,CACzBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACA,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;MAC9B;MACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,KAAK,CAACM,MAAM,CAAC;MAC5D,MAAMC,UAAU,GAAGP,KAAK,CAACE,WAAW,CAAC;MACrC;MACAR,QAAQ,CAACa,UAAU,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACEjB,OAAA;IAAKkB,KAAK,EAAE;MAAEC,eAAe,EAAG,OAAMC,OAAO,CAACC,GAAG,CAACC,UAAW,wBAAuB;MAAEC,cAAc,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC/HzB,OAAA;MAAKkB,KAAK,EAAE;QAACQ,KAAK,EAAE,SAAS;QAAEC,UAAU,EAAE,QAAQ;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,QAAQ,EAAC;MAAM,CAAE;MAAAN,QAAA,eACrIzB,OAAA;QAAKkB,KAAK,EAAE;UAACc,SAAS,EAAC;QAAM,CAAE;QAAAP,QAAA,EAAC;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACNpC,OAAA;MAAKkB,KAAK,EAAE;QAACQ,KAAK,EAAC,OAAO;QAAEC,UAAU,EAAC,QAAQ;QAAEI,QAAQ,EAAC;MAAM,CAAE;MAAAN,QAAA,eAChEzB,OAAA;QAAKkB,KAAK,EAAE;UAACmB,UAAU,EAAC,MAAM;UAACL,SAAS,EAAC;QAAM,CAAE;QAAAP,QAAA,GAC9CtB,KAAK,EAAC,IAAE;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CA9BID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}